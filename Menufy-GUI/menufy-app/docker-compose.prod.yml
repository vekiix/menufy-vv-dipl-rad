# Production-specific overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  menufy-app:
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      options:
        max-size: "50m"
        max-file: "5"

  nginx:
    # Use SSL configuration in production
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    #   - certbot-www:/var/www/certbot:ro
    #   - certbot-conf:/etc/nginx/ssl:ro
    environment:
      - SSL_ENABLED=true

  # Let's Encrypt SSL certificate management
 # certbot:
 #   image: certbot/certbot:latest
 #   container_name: menufy-certbot
 #   volumes:
    #   - certbot-www:/var/www/certbot:rw
    #   - certbot-conf:/etc/letsencrypt:rw
 #   command: certonly --webroot --webroot-path=/var/www/certbot --email admin@your-domain.com --agree-tos --no-eff-email -d your-domain.com -d www.your-domain.com
 #   depends_on:
 #     - nginx

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: menufy-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - menufy-network


volumes:
  certbot-www:
    driver: local
  certbot-conf:
    driver: local
  prometheus-data:
    driver: local


